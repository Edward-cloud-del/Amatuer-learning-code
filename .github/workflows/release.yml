name: 'Release App'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: pnpm install --frozen-lockfile

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'FrameSense v__VERSION__'
          releaseBody: |
            üéâ **FrameSense v__VERSION__ is here!**
            
            ## ‚ú® Features
            - AI-powered screen capture with instant insights
            - Smart contextual analysis using GPT-4 Vision
            - Lightning-fast native performance
            - Note: OCR functionality available in local builds
            
            ## üì• Download for your platform:
            - **macOS**: Download the `.dmg` file
            - **Windows**: Download the `.msi` file  
            - **Linux**: Download the `.AppImage` file
            
            Built with ‚ù§Ô∏è using Tauri + React + Rust
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }} 